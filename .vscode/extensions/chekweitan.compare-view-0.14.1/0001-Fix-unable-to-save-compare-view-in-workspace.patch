From acb94999e7d79542fad565c16b7745d552004744 Mon Sep 17 00:00:00 2001
From: tanchekwei <weiwei1@live.com.my>
Date: Mon, 5 Feb 2024 16:26:59 +0800
Subject: [PATCH 1/2] Fix unable to save compare view in workspace

---
 src/extension.ts | 39 +++++++++++++++++++++++----------------
 1 file changed, 23 insertions(+), 16 deletions(-)

diff --git a/src/extension.ts b/src/extension.ts
index 4a5a470..7bc4f90 100644
--- a/src/extension.ts
+++ b/src/extension.ts
@@ -1,19 +1,20 @@
+import { join } from "path";
 import {
-  window,
-  commands,
   ExtensionContext,
-  Uri,
-  workspace,
   Tab,
-  TabInputTextDiff,
   TabInputText,
+  TabInputTextDiff,
+  Uri,
+  commands,
+  window,
+  workspace,
 } from "vscode";
 const name = "Compare View ";
 const arrow = " â†” ";
 const scheme = "untitled";
 const section = "compareView";
 const tabNoRegex = new RegExp(`(?<=\\b${name}\\b)\\d+`, "g");
-const compareViewTabPathRegex = new RegExp(`\\/\\b${name}\\b\\d+$`); // do not set global flag, to prevent lastIndex being set
+const compareViewTabPathRegex = new RegExp(`\\b${name}\\b\\d+$`); // do not set global flag, to prevent lastIndex being set
 const compareViewDiffTabLabelRegex = new RegExp(
   `^\\b${name}\\b\\d+\\b${arrow}${name}\\b\\d+$`
 );
@@ -31,10 +32,18 @@ export function activate(context: ExtensionContext) {
 }
 
 const createCompareView = () => {
+  let folderPath;
+  if (workspace.workspaceFolders && workspace.workspaceFolders.length > 0) {
+    folderPath = workspace.workspaceFolders[0].uri.path;
+  } else {
+    folderPath = "/";
+  }
   const leftName = `${name}${++count}`;
-  const leftUri = Uri.parse(`${scheme}:/${leftName}`);
+  const leftPath = join(folderPath, leftName);
+  const leftUri = Uri.parse(`${scheme}:${leftPath}`);
   const rightName = `${name}${++count}`;
-  const rightUri = Uri.parse(`${scheme}:/${rightName}`);
+  const rightPath = join(folderPath, rightName);
+  const rightUri = Uri.parse(`${scheme}:${rightPath}`);
   window
     .showTextDocument(rightUri)
     .then(() =>
@@ -85,19 +94,17 @@ const subscribeCloseEvent = () => {
         return isCompareViewDiffTab(tab);
       })
       .forEach((tab) => {
-        const tabToClose: string[] = [];
-        tab.label.match(tabNoRegex)?.forEach((count) => {
-          tabToClose.push(`/${name}${count}`);
-        });
-        if (tabToClose.length === 0) {
-          return;
-        }
+        const tabInputTextDiff = tab.input as TabInputTextDiff;
+        const tabsToClose: string[] = [
+          tabInputTextDiff.original.path,
+          tabInputTextDiff.modified.path,
+        ];
         window.tabGroups.all
           .flatMap(({ tabs }) => tabs)
           .filter((tab) => {
             return (
               isCompareViewTab(tab) &&
-              tabToClose.includes(((tab.input as any).uri! as Uri).path)
+              tabsToClose.includes(((tab.input as any).uri! as Uri).path)
             );
           })
           .forEach((tab) => {
-- 
2.33.0.windows.2

